---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/users/{user_id}/posts":
    get:
      summary: Retrieves all posts for a user
      tags:
      - Posts
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    text:
                      type: string
                  required:
                  - id
                  - title
                  - text
  "/users/{user_id}/posts/{post_id}/comments":
    get:
      summary: Retrieves all comments for a post
      tags:
      - Comments
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
      - name: post_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    text:
                      type: string
                  required:
                  - id
                  - text
    post:
      summary: Creates a new comment
      tags:
      - Comments
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
      - name: post_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
              required:
              - text
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
